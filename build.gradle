//file:noinspection GroovyAssignabilityCheck
//file:noinspection GroovyAccessibility
buildscript {
	repositories {
		gradlePluginPortal()
	}
	dependencies {
		classpath 'com.modrinth.minotaur:Minotaur:2.6.0'
		classpath "com.github.breadmoirai:github-release:2.4.1"
	}
}
plugins {
	id 'maven-publish'
	alias libs.plugins.quilt.loom
}

def mc_major = '1.20'
def mc = mc_major + ''
def default_branch = '1.19'
def origVersion = project.version
archivesBaseName = project.archives_base_name
version = "${project.version}+${libs.versions.minecraft.get()}"
group = project.maven_group

repositories {
	mavenLocal()
	maven { // Switchy
		url = 'https://maven.proxyfox.dev/'
		content {
			includeGroup 'folk.sisby'
		}
	}
	maven { // Server Translations API
		url "https://maven.nucleoid.xyz/"
	}
	maven { // owo-lib
		url 'https://maven.wispforest.io'
	}
	mavenLocal()
}

// All the dependencies are declared at gradle/libs.version.toml and referenced with "libs.<id>"
// See https://docs.gradle.org/current/userguide/platforms.html for information on how version catalogs work.
dependencies {
	minecraft libs.minecraft
	mappings variantOf(libs.quilt.mappings) { classifier "intermediary-v2" }
	modImplementation libs.quilt.loader

	modImplementation libs.switchy
	modImplementation libs.switchy.client
	modImplementation libs.switchy.ui
}

processResources {
	final Map<String, String> map = [
		"version"  : version.toString(),
		"minecraft": libs.versions.minecraft.get(),
		"ql"       : libs.versions.quilt.loader.get(),
		"switchy"  : libs.versions.switchy.get()
	]

	inputs.properties(map)
	filesMatching('*.mod.json') { expand(map) }
}

tasks.withType(JavaCompile).configureEach {
	it.options.encoding = "UTF-8"
	// Minecraft 1.18 (1.18-pre2) upwards uses Java 17.
	it.options.release = 17
}

java {
	// Still required by IDEs such as Eclipse and Visual Studio Code
	sourceCompatibility = JavaVersion.VERSION_17
	targetCompatibility = JavaVersion.VERSION_17

	// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task if it is present.
	// If you remove this line, sources will not be generated.
	withSourcesJar()

	// If this mod is going to be a library, then it should also generate Javadocs in order to aid with development.
	// Uncomment this line to generate them.
	// withJavadocJar()
}

// If you plan to use a different file for the license, don't forget to change the file name here!
jar {
	from("LICENSE") {
		rename { "${it}_${archivesBaseName}" }
	}
	from("src/main/resources/data/switchy_teleport/lang") {
		into { "assets/switchy_teleport_data/lang" }
	}
}

// Configure the maven publication
publishing {
	publications {
		mavenJava(MavenPublication) {
			from components.java
		}
	}

	// See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
	repositories {
		// Add repositories to publish to here.
		// Notice: This block does NOT have the same function as the block in the top level.
		// The repositories here will be used for publishing your artifact, not for
		// retrieving dependencies.
	}
}
if (System.getenv("MODRINTH_TOKEN")) {
	apply plugin: "com.modrinth.minotaur"
	modrinth {
		token = System.getenv("MODRINTH_TOKEN")
		projectId = 'switchy-teleport'
		versionNumber = project.version
		versionName = origVersion
		versionType = 'release'
		uploadFile = remapJar
		gameVersions = [mc, '1.20.1']
		loaders = ['quilt', 'fabric', 'forge']
		detectLoaders = false
		dependencies {
			required.project "switchy"
		}
		changelog = "Changelog: https://github.com/Draconizations/switchy-teleport/releases/tag/v" + origVersion
		syncBodyFrom = rootProject.file("README.md").text
	}
}

if (System.getenv("GITHUB_TOKEN")) {
	apply plugin: "com.github.breadmoirai.github-release"
	githubRelease {
		token System.getenv("GITHUB_TOKEN")
		owner "Draconizations"
		repo "switchy-teleport"
		tagName 'v' + origVersion
		releaseName origVersion
		targetCommitish default_branch
		draft false
		prerelease false
		releaseAssets remapJar.archiveFile
		allowUploadToExisting true
		generateReleaseNotes true
	}
	tasks.githubRelease.dependsOn remapJar
}

if (System.getenv("MODRINTH_TOKEN") && System.getenv("GITHUB_TOKEN")) {
	tasks.register("fullRelease") {
		group "publishing"
		dependsOn "githubRelease"
		dependsOn "modrinth"
	}
}
