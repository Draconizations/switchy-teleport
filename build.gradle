//file:noinspection GroovyAssignabilityCheck
//file:noinspection GroovyAccessibility
buildscript {
	repositories {
		gradlePluginPortal()
	}
	dependencies {
		classpath 'com.modrinth.minotaur:Minotaur:2.6.0'
		classpath "com.github.breadmoirai:github-release:2.4.1"
	}
}
plugins {
	id 'maven-publish'
	alias libs.plugins.loom
}

version = "$project.baseVersion+$project.branch"
archivesBaseName = project.name
group = 'xyz.fulmine'

repositories {
	mavenLocal()
	maven { url 'https://maven.proxyfox.dev/' } // Switchy
	maven { url 'https://repo.sleeping.town/' } // Keleido
	maven { url "https://maven.nucleoid.xyz/" } // Server Trans
	maven { url 'https://maven.wispforest.io' } // owo lib
}

dependencies {
	minecraft libs.mc
	mappings variantOf(libs.qm) { classifier "intermediary-v2" }
	modImplementation libs.ql

	modImplementation libs.switchyCore
	modImplementation libs.switchyClient
	modImplementation libs.switchyUI
}

processResources {
	final Map<String, String> map = [
		"version": version.toString(),
		"mc"     : libs.versions.mc.get(),
		"ql"     : libs.versions.ql.get(),
		"switchy": libs.versions.switchy.get()
	]

	inputs.properties(map)
	filesMatching('*.mod.json') { expand(map) }
}

tasks.withType(JavaCompile).configureEach {
	it.options.encoding = "UTF-8"
	it.options.release = 17
}

java {
	sourceCompatibility = targetCompatibility = JavaVersion.VERSION_17
	withSourcesJar()
}

jar {
	from("LICENSE") {
		rename { "${it}_${archivesBaseName}" }
	}
	from("src/main/resources/data/switchy_teleport/lang") {
		into { "assets/switchy_teleport_data/lang" }
	}
}

// Configure the maven publication
publishing {
	publications {
		mavenJava(MavenPublication) {
			from components.java
		}
	}
	repositories {
	}
}

if (System.getenv("MODRINTH_TOKEN")) {
	apply plugin: "com.modrinth.minotaur"
	modrinth {
		token = System.getenv("MODRINTH_TOKEN")
		projectId = 'switchy-teleport'
		versionNumber = project.version
		versionName = baseVersion
		versionType = 'release'
		uploadFile = remapJar
		gameVersions = [libs.versions.mc.get()]
		loaders = ['quilt', 'fabric']
		detectLoaders = false
		dependencies {
			required.project "switchy"
		}
		changelog = "Changelog: https://github.com/Draconizations/switchy-teleport/releases/tag/v" + baseVersion
		syncBodyFrom = rootProject.file("README.md").text
	}
}

if (System.getenv("GITHUB_TOKEN")) {
	apply plugin: "com.github.breadmoirai.github-release"
	githubRelease {
		token System.getenv("GITHUB_TOKEN")
		owner "Draconizations"
		repo "switchy-teleport"
		tagName 'v' + baseVersion
		releaseName baseVersion
		targetCommitish defaultBranch
		draft false
		prerelease false
		releaseAssets remapJar.archiveFile
		allowUploadToExisting true
		generateReleaseNotes true
	}
	tasks.githubRelease.dependsOn remapJar
}

if (System.getenv("MODRINTH_TOKEN") && System.getenv("GITHUB_TOKEN")) {
	tasks.register("fullRelease") {
		group "publishing"
		dependsOn "githubRelease"
		dependsOn "modrinth"
	}
}
